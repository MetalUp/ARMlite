//Define and initialise registers
MOV R5, #0  //R5 will hold the successful guesses in right place(s), otherwise zeros
MOV R12, #0 //Number of wrong guesses
MOV R11, #0 //Number of matches
//Capture word
MOV R0, #setter
STR R0, .WriteString
MOV R0, #secretWord 
STR R0, .ReadString
LDR R1, secretWord

guessLetter:
MOV R0, #player
STR R0, .WriteString
MOV R0, #letterGuess
STR R0, .ReadString
LDR R0, letterGuess
AND R0,R0, #255 //Limit to one character only

MOV R8, #0  //Set to 1 if a new match
MOV R2, #0  //The shift value for four characters 0 > 8 > 16> 24
checkChar:
MOV R6, #0xff  //The mask for character 1
LSL R6, R6, R2 //Shift mask as needed
AND R7,R5, R6  //Apply mask to past guesses
CMP R7, #0 //If char position is not empty we previously guess this char
BEQ cont
LSR R4,R7, R2
B writeChar
cont: 
AND R3, R1, R6
LSR R4, R3, R2  //Get the char back to position 1
CMP R4, R0  //TODO, check for upper/lower case by XOR #32 & try again
BNE notAMatch
ORR R5,R5,R3 
ADD R11,R11,#1
MOV R8, #1  //Set R8 to flag that the character has been matched
B writeChar
notAMatch:
MOV R4, #95 //Underscore
writeChar:
STR R4, .WriteChar
ADD R2,R2, #8  //Shift to next character
CMP R2, #32
BLT checkChar
MOV R4, #10 //Newline
STR R4, .WriteChar

//If there has not been a match, increment the number of misses
CMP R8, #0
BNE checkWin
ADD R12, R12, #1
STR R12, .WriteUnsignedNum
MOV R0, #wrong
STR R0, .WriteString
B drawPic

//Check for win
checkWin:
CMP R11, #4
BNE drawPic
MOV R0, #win
STR R0, .WriteString
HALT

drawPic:
CMP R12, #1
BLT guessLetter
MOV R0, #.brown
STR R0, .Pixel707 //Upright
STR R0, .Pixel675
STR R0, .Pixel643
STR R0, .Pixel611
STR R0, .Pixel579
STR R0, .Pixel547
STR R0, .Pixel515
STR R0, .Pixel483
STR R0, .Pixel451
CMP R12, #2
BLT guessLetter
STR R0, .Pixel452 //Cross beam
STR R0, .Pixel452
STR R0, .Pixel453
STR R0, .Pixel454
STR R0, .Pixel455
CMP R12, #3
BLT guessLetter  
MOV R0, #.grey
STR R0, .Pixel487 //Rope
CMP R12, #4
BLT guessLetter
MOV R0, #.pink
STR R0, .Pixel519 //Head
CMP R12, #5
BLT guessLetter
MOV R0, #.blue
STR R0, .Pixel551 //Body
STR R0, .Pixel583
STR R0, .Pixel615
CMP R12, #6
BLT guessLetter
STR R0, .Pixel646 //Left leg
STR R0, .Pixel678
STR R0, .Pixel710
CMP R12, #7
BLT guessLetter
STR R0, .Pixel648 //Right leg
STR R0, .Pixel680
STR R0, .Pixel712
CMP R12, #8
BLT guessLetter
STR R0, .Pixel550 //Left arm
STR R0, .Pixel581
CMP R12, #9
BLT guessLetter
STR R0, .Pixel552 //Right arm
STR R0, .Pixel585
CMP R12, #10  //This many guesses means you're hung!
BLT guessLetter
MOV R0, #.black
STR R0, .Pixel519 //Head again
MOV R0, #lose
STR R0, .WriteString
MOV R0, #secretWord
STR R0, .WriteString
HALT

.ALIGN 512
secretWord: .WORD 0
.WORD 0
letterGuess: .WORD 0
setter: .ASCIZ "Setter: Type in word\n"
player: .ASCIZ "Player: Try a letter\n"
win: .ASCIZ "You win!\n"
lose: .ASCIZ "You lose! The word was:"
wrong: .ASCIZ "Wrong guesses"
